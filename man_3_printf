.TH _printf 3 "23 november 2023""_printf man page"
.SH NAME
_printf \- print formatted data to the standard output.
.SH SYNOPSIS
.B int _printf (const char *format, ...);
.SH DESCRIPTION
 The _printf() function prints formatted data to the standard output. It parses the format string and processes each conversion specifier by calling the appropriate function to print the corresponding data type (example : "%d"/"%i" (for integer), "%c" (for char), "%s" (for string))
. Additional arguments after format are retrieved using va_list and va_start to access the variable arguments.
.SH RETURN VALUE
 This function returns the number of characters printed (the total legth of the string). If format is NULL or only contains '%', the function returns -1.
.SH FORMAT SPECIFIERS   
 The following format specifers are supported:
 "%d"/"%i" (for integer), "%c" (for char), "%s" (for string)
.TP
.SH EXAMPLES
Print an integer:
_printf("The answer is %d\\n", 42); 
.B Result: "The answer is 42"

Print a string:
_printf("Hello, %s!\\n", "world"); 
.B Result : "Hello, world!"

Print a character:
_printf("First letter: %c\n", 'A'); 
.B Result: "First letter: A" 
.SH NOTES
- The _printf() function may not support all the format specifiers provided by the standard printf function. Refer to the documentation for a list of supported specifiers.

- Floating-point precision is limited, and rounding errors may occur when printing floating-point numbers.

- Be cautious when using user-provided format strings to prevent security vulnerabilities such as format string attacks. Always validate and sanitize user input.

- The behavior of the _printf() function with certain combinations of format specifiers and arguments may vary between different systems and compilers.

.SH SEE ALSO
.B man printf
.SH AUTHORS
.B Omer Ozturk & Philippe Wanquetin









